# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

## Pre-initialization
# Create the socket used by wob and start it
set $fancyWob wob --bar-color "#FF991b4b" --border-color "#FF650024" --background-color "#849B4DCB" -H 30 -b 0 -p 5 -M 0 -a top
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | clampstdout | $fancyWob

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Programs
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $term alacritty
#set $menu wofi | xargs swaymsg exec --
set $menu rofi -show-icons -show drun | xargs swaymsg exec --
#set $dmenu dmenu_path | dmenu | xargs swaymsg exec --
set $dmenu rofi -show run | xargs swaymsg exec --
set $musicLibrary swaymsg exec "alacritty -e 'cmus'"
set $calculator swaymsg exec liri-calculator
set $fancySwayLock swaylock \
	--screenshots \
	--clock \
	--effect-blur 7x5 \
	--effect-vignette 0.5:0.5 \
	--indicator \
	--indicator-radius 100 \
	--indicator-thickness 7 \
	--font 'monospace' \
	--inside-color cd53ba84 \
	--ring-color cd53ba84 \
	--inside-clear-color b4d83474 \
	--ring-clear-color a8c62d84 \
	--inside-ver-color 338cdd74 \
	--ring-ver-color 2b7aca84 \
	--inside-wrong-color c73f3074 \
	--ring-wrong-color b6372a84 \
	--bs-hl-color a8c62d84 \
	--key-hl-color 991b4b \
	--line-color 00000000 \
	--line-clear-color 00000000 \
	--line-caps-lock-color 00000000 \
	--line-ver-color 00000000 \
	--line-wrong-color 00000000 \
	--separator-color 00000000 \
	--text-color 000000DE \
	--text-clear-color 000000DE \
	--text-ver-color 000000DE \
	--text-wrong-color 000000DE \
	--ring-color ce5076 \
	--grace 100 \
	--fade-in 0.2;

# Helpers
set $pactlSink @DEFAULT_SINK@
set $getSinkVolume amixer sget Master | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1
set $getSinkMuteOrVolume amixer sget Master | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1
set $toClipboard - | wl-copy

# Keybind commands
set $volPlus exec --no-startup-id pactl set-sink-volume $pactlSink +5% && $getSinkVolume > $SWAYSOCK.wob
set $volMinus exec --no-startup-id pactl set-sink-volume $pactlSink -5% && $getSinkVolume > $SWAYSOCK.wob
set $volMute exec --no-startup-id pactl set-sink-mute $pactlSink toggle && $getSinkMuteOrVolume > $SWAYSOCK.wob
set $mediaStop exec playerctl stop
set $mediaPrev exec playerctl previous
set $mediaToggle exec playerctl play-pause
set $mediaNext exec playerctl next
set $captureAll exec grim
set $captureFocused exec grim -g "$(swaymsg -t get_tree | getFocusedNode -s)"
set $captureMonitor exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')
set $captureRegion exec grim -g "$(slurp)"

### Output configuration
#
# Seaside Dark background. TODO: auto switch
output * bg /home/pedrokalil/Downloads/seaside_dark_bg.png fill

#
# Multi-display configuration:
#            +---------------+
#            |               |
# +----------+    HDMI-A-1   |
# |  eDP-1   |               |
# |          |               |
# +----------+---------------+
#
output "eDP-1" {
    mode 1366x768@60.063999Hz
    position 0 312
    subpixel rgb
}
output "eDP-1" transform 180 clockwise
output "HDMI-A-1" {
    mode 1920x1080@60.000000Hz
    position 1366 0
    subpixel rgb
}
### Idle configuration
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
        timeout 300 '$fancySwayLock' \
        timeout 700 'swaymsg "output * dpms off"' \
            resume 'swaymsg "output * dpms on"' \
        before-sleep '$fancySwayLock'

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
# Enable drag and drop
input "1267:1071:ELAN_Touchscreen" {
    drag enabled
}
# Touchpad configuration
# Make the acceleration adaptative
# Disable with another mice
# Disable while typing
# Enable tap
# Emulate middle button
# Enable natural scroll
input "1739:30171:DLL0675:00_06CB:75DB_Touchpad" {
    accel_profile adaptive
    events disabled_on_external_mouse
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
input * {
    xkb_layout us,us,br
    xkb_variant intl,,
    xkb_options grp:sclk_toggle
}


### Init programs
exec_always --no-startup-id flashfocus
exec --no-startup-id autotiling

### Key bindings

#
# Mech keyboard function keys
#

# Fn + F1  (Music library)
bindcode 179 $musicLibrary
# Fn + F2  (Volume -)
bindcode 122 $volMinus
# Fn + F3  (Volume +)
bindcode 123 $volPlus
# Fn + F4  (Volume mute)
bindcode 121 $volMute

# Fn + F5  (Media stop)
bindcode 174 $mediaStop
# Fn + F6  (Media Previous)
bindcode 173 $mediaPrev
# Fn + F7  (Media Play/Pause)
bindcode 172 $mediaToggle
# Fn + F8  (Media Next)
bindcode 171 $mediaNext

# Fn + F9  (Mail)
#bindcode 163 exec
# Fn + F10 (Home)
#bindcode 180 exec
# Fn + F11 (Lock the keyboard) ## impossible to use
# Fn + F12 (Calculator)
bindcode 148 $calculator

#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    # default: bindsym $mod+Shift+q kill
    bindsym Alt+F4 kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $dmenu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

#
# Screenshotting
#
mode "screenshot" {
    # Capture to clipboard
    bindsym q $captureAll $toClipboard
    bindsym w $captureFocused $toClipboard && flash_window
    bindsym e $captureMonitor $toClipboard
    bindsym r $captureRegion $toClipboard

    # Capture to file with Shift
    bindsym Shift+q $captureAll
    bindsym Shift+w $captureFocused && flash_window
    bindsym Shift+e $captureMonitor
    bindsym Shift+r $captureRegion

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+c mode "default"
}
bindsym $mod+c mode "screenshot"

# Styles
# According to https://material.io/design/layout/responsive-layout-grid.html
gaps outer 12
gaps inner 24
smart_gaps on
smart_borders on

default_border pixel 2

# class                 border    backgr.   text      indicator child_border
client.focused          #691b99   #691b99   #DDDDDD   #DDDDDD   #691b99
#client.focused_inactive #242424   #24242400 #24242400 #24242400 #24242400 
client.unfocused        #151515   #151515   #999999   #999999   #151515
#client.urgent           #2E344000 #2E344000 #2E344000 #2E344000 #2E344000
#client.placeholder      #2E344000 #2E344000 #2E344000 #2E344000 #2E344000

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    #position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    
    # Material purple 800
    #colors {
    #    statusline #CCCCCC
    #    background #38006B
    #    inactive_workspace #FFFF0000 #FF00FF00 #0000FF
    #}
    swaybar_command waybar
}

# Font for window titles and bar.
font pango:monospace 10

include /etc/sway/config.d/*
